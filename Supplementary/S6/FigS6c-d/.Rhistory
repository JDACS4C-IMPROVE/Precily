library(umap)
source("DrugsPred.R")
##loading GSVA scores
load("enrichment.scores.Rdata")
##loading metadata file
load("GDSC2_metadata.RData")
##Drug response prediction
df1 = drugPred(enrichment.scores,metadata,"PRAD")
##Reduce list to dataframe
Pred=df1 %>% purrr::reduce(left_join, by = "DRUGS")
Predictions = Pred[,2:ncol(Pred)]
rownames(Predictions) = Pred[,1]
View(Predictions)
setwd("D:\\PrecOnco_codes_figurewise\\Fig4\\Fig5d-f")
##loading libraries
library(readxl)
library(GSEABase)
library(GSVA)
library(h2o)
library(data.table)
library(impute)
library(ggplot2)
h2o.init()
##Source function for drug response prediction
source("DrugsPred.R")
##loading data
data = read_excel("GSE77940_pre_post_melanoma.xlsx")
df = as.matrix(data[,3:ncol(data)])
rownames(df) = as.matrix(data[,2])
##Convert rpkm data to tpm
rpkm2tpm <- function(x) {
x <- as.matrix(x)
return(t(t(x)/colSums(x))*10^6)
}
tpm = rpkm2tpm(df)
##log transform tpm data
mat = log2(tpm+1)
##convert data to gsva
geneSets = getGmt("c2.cp.v6.1.symbols.gmt")
enrichment.scores <- gsva(mat, geneSets, method="gsva")
##loading AutoML model
model1 <- h2o.loadModel(path="D:\\PrecOnco_codes_figurewise\\Fig4\\Fig5d-f\\XRT_1_AutoML_89_20220610_73325")
##loading TCGA metadata file
load("metadata_TCGA.RData")
##Predictions
pred = drugPred(enrichment.scores,metadata,"SKCM")
##Patient1 pre
pos1 = which(pred[[1]][,1]=="Dabrafenib")
pos2 = which(pred[[1]][,1]=="Trametinib")
dabra_pre = pred[[1]][pos1,]
tra_pre = pred[[1]][pos2,]
##patient1 post
pos1 = which(pred[[2]][,1]=="Dabrafenib")
pos2 = which(pred[[2]][,1]=="Trametinib")
dabra_post = pred[[2]][pos1,]
tra_post = pred[[2]][pos2,]
##barplot Patient1
pt1 = cbind(rbind.data.frame(dabra_pre,tra_pre,dabra_post,tra_post),c("Pre","Pre","Post","Post"))
colnames(pt1) = c("Drugs","Probability","Group")
pt1$Group <- factor(pt1$Group, levels = c("Pre","Post"))
ggplot(data=pt1, aes(x=Group, y=Probability, fill=Drugs)) +
geom_bar(stat="identity", color="black", position=position_dodge(),width = 0.6)+
theme_classic(base_size=20) + ylab("Probability of response")+scale_fill_manual(values=c(Dabrafenib="red",Trametinib="darkslateblue"))
##Patient2 pre
pos1 = which(pred[[3]][,1]=="Dabrafenib")
pos2 = which(pred[[3]][,1]=="Trametinib")
dabra_pre = pred[[3]][pos1,]
tra_pre = pred[[3]][pos2,]
##patient2 post
pos1 = which(pred[[4]][,1]=="Dabrafenib")
pos2 = which(pred[[4]][,1]=="Trametinib")
dabra_post = pred[[4]][pos1,]
tra_post = pred[[4]][pos2,]
##barplot Patient2
pt1 = cbind(rbind.data.frame(dabra_pre,tra_pre,dabra_post,tra_post),c("Pre","Pre","Post","Post"))
colnames(pt1) = c("Drugs","Probability","Group")
pt1$Group <- factor(pt1$Group, levels = c("Pre","Post"))
ggplot(data=pt1, aes(x=Group, y=Probability, fill=Drugs)) +
geom_bar(stat="identity", color="black", position=position_dodge(),width = 0.6)+
theme_classic(base_size=20) + ylab("Probability of response")+scale_fill_manual(values=c(Dabrafenib="red",Trametinib="darkslateblue"))
##Patient3 pre
pos1 = which(pred[[5]][,1]=="Dabrafenib")
pos2 = which(pred[[5]][,1]=="Trametinib")
dabra_pre = pred[[5]][pos1,]
tra_pre = pred[[5]][pos2,]
##patient3 post
pos1 = which(pred[[6]][,1]=="Dabrafenib")
pos2 = which(pred[[6]][,1]=="Trametinib")
dabra_post = pred[[6]][pos1,]
tra_post = pred[[6]][pos2,]
##barplot Patient3
pt1 = cbind(rbind.data.frame(dabra_pre,tra_pre,dabra_post,tra_post),c("Pre","Pre","Post","Post"))
colnames(pt1) = c("Drugs","Probability","Group")
pt1$Group <- factor(pt1$Group, levels = c("Pre","Post"))
ggplot(data=pt1, aes(x=Group, y=Probability, fill=Drugs)) +
geom_bar(stat="identity", color="black", position=position_dodge(),width = 0.6)+
theme_classic(base_size=20) + ylab("Probability of response")+scale_fill_manual(values=c(Dabrafenib="red",Trametinib="darkslateblue"))
paste(path, "XRT_1_AutoML_89_20220610_73325",sep="\")
paste(path, "XRT_1_AutoML_89_20220610_73325",sep="/")
paste("D:\PrecOnco_codes_figurewise\Fig4\Fig5d-f", "XRT_1_AutoML_89_20220610_73325",sep="/")
paste("D:\\PrecOnco_codes_figurewise\\Fig4\\Fig5d-f", "XRT_1_AutoML_89_20220610_73325",sep="/")
paste("D:\\PrecOnco_codes_figurewise\\Fig4\\Fig5d-f", "XRT_1_AutoML_89_20220610_73325",sep="\\")
paste("D:\\PrecOnco_codes_figurewise\\Fig4\\Fig5d-f", "XRT_1_AutoML_89_20220610_73325",sep="\")
setwd("D:\\PrecOnco_codes_figurewise\\Supplementary\\S1\\S1b")
setwd("D:\\PrecOnco_codes_figurewise\\Supplementary\\S1\\S1b")
##Loading libraries
library(ggplot2)
##Loading file consisting IC50 values from CTRPv2 and GDSC datasets
df = read.csv("File_for_FigS1b.csv",row.names = 1)
##plotting densities
ggplot(df,aes(x=LNIC50, col=group)) +
geom_density(size=1) +theme_classic(base_size = 20) +scale_color_manual(values=c("blue","red"))
setwd("D:\PrecOnco_codes_figurewise\Supplementary\S1\S1c")
setwd("D:\\PrecOnco_codes_figurewise\\Supplementary\\S1\\S1c")
##loading libraries
library(caret)
library(ggpubr)
##loading predictions vs actual file
df = read.csv("Predictions_vs_Actual.csv")
##computing metrics
perf = data.frame(
Rsquare = R2(df[,3],df[,4]),
correlation = cor(df[,3], df[,4]))
##Plotting sensity scatter plot for actual vs predicted labels
df = cbind.data.frame(df[,4],df[,3])
colnames(df) = c("Actual","Predicted")
get_density <- function(x, y, ...) {
dens <- MASS::kde2d(x, y, ...)
ix <- findInterval(x, dens$x)
iy <- findInterval(y, dens$y)
ii <- cbind(ix, iy)
return(dens$z[ii])
}
df$density <- get_density(df$Actual, df$Predicted,n=50)
g=ggscatter(df, x = "Actual", y = "Predicted",
add = "reg.line", conf.int = TRUE,
cor.coef = TRUE, cor.method = "pearson",color = "density",
xlab = "GDSC Z-score", ylab = " Predicted Z-score",add.params = list(color="black"),cor.coef.size = 10)
g+  scale_colour_gradientn(colours = terrain.colors(10))+theme_classic() +theme(axis.text=element_text(size=25))
perf
setwd("D:\\PrecOnco_codes_figurewise\\Supplementary\\S2\\FigS2a")
##Loading libraries
library(keras)
library(impute)
library(tidyverse)
library(ggplot2)
library(reshape2)
##Source function
source("DrugsPred.R")
##loading data
load("enrichment.scores.Rdata")
colnames(enrichment.scores)<-gsub('FBS.','',colnames(enrichment.scores))
##loading metadata
load("GDSC2_metadata.RData")
df1 = drugPred(enrichment.scores,metadata,"PRAD")
##Reduce list to dataframe
Pred=df1 %>% purrr::reduce(left_join, by = "DRUGS")
rownames(Pred) = Pred[,1]
predictions = Pred[,-1]
sdmean = read.csv("Drugs_means_sd.csv",sep=",",header = T,stringsAsFactors = F,row.names = 1)
pred = merge(sdmean,predictions,by=0)
Predictions = (pred[,5:ncol(pred)] - pred[,3])/pred[,4]
Pred = cbind.data.frame(pred[,1],Predictions)
###Subsetting PI3K/MTOR signaling drugs
pathways = read.csv("GDSC2_targeted_pathways.csv",sep=",",header = T,stringsAsFactors = F)
pos = which((pathways[,1]) %in% Pred[,1])
pathways=pathways[pos,]
pos = which(pathways$Pathways =="PI3K/MTOR signaling")
pathways = pathways[pos,]
dr = as.vector(pathways[,1])
pos = which(Pred[,1] %in% dr)
mat = Pred[pos,]
##data preparation
final = melt(mat)
colnames(final)[1] = "DRUGS"
final$variable<-gsub('ATT.','',final$variable)
final$col <- ifelse(final$DRUGS %in% c("AZD2014"), "darkred", "ivory4")
final <- within(final, col[DRUGS == c("Afuresertib")] <- "Pink")
final <- within(final, col[DRUGS == c("Ipatasertib")] <- "Pink")
final <- within(final, col[DRUGS == c("Uprosertib")] <- "Pink")
final$shape <- ifelse(final$DRUGS == "AZD2014",17,19)
final <- within(final, shape[DRUGS == c("Ipatasertib")] <- 15 )
final <- within(final, shape[DRUGS == c("Afuresertib")] <- 23 )
final <- within(final, shape[DRUGS == c("Uprosertib")] <- 24 )
shape = as.numeric(final$shape)
names(shape) = final$DRUGS
final$variable = gsub("\\..*","",final$variable)
final$variable <- factor(final$variable,
levels = c('LNCAP','DUCAP',"VCAP","DU145","PC3"),ordered = TRUE)
##Ploting
ggplot(final, aes(x=variable, y=value))+
geom_boxplot(lwd=0.3,fatten=4,alpha=0.2,outlier.shape=NA)+
geom_point(aes(color=col,shape= DRUGS), position=position_jitter(width=0.15, height=0.0,seed=1),size=1,alpha=0.8,stroke=1)+ scale_shape_manual(values =shape)+
scale_colour_identity()+
theme_classic(base_size = 20) + theme(axis.text.x = element_text(angle = 45, hjust=1,size=10),axis.text.y = element_text(size=10))
###Wilcoxon
LNCAP = final[which(final$variable=="LNCAP"),]
DU145 = final[which(final$variable=="DUCAP"),]
PC3 = final[which(final$variable=="PC3"),]
DUCAP = final[which(final$variable=="DU145"),]
VCAP = final[which(final$variable=="VCAP"),]
wilcox.test(LNCAP$value,DUCAP$value)
wilcox.test(LNCAP$value,VCAP$value)
wilcox.test(LNCAP$value,DU145$value)
wilcox.test(LNCAP$value,PC3$value)
setwd("D:\\PrecOnco_codes_figurewise\\Supplementary\\S2\\FigS2b")
##loading libraries
library(ggplot2)
##loading data
load("enrichment.scores.Rdata")
colnames(enrichment.scores)<-gsub('FBS.','',colnames(enrichment.scores))
##subsetting mTOR related pathways
mtor = enrichment.scores[rownames(enrichment.scores)[grep('MTOR',rownames(enrichment.scores))],]
mtor1 = cbind.data.frame(rownames(mtor),mtor)
rownames(mtor1) = NULL
colnames(mtor1)[1] = "Pathways"
final = melt(mtor1)
final$variable<-gsub('FBS.','',final$variable)
final$variable = gsub("\\..*","",final$variable)
final$variable <- factor(final$variable,
levels = c('LNCAP','DUCAP',"VCAP","DU145","PC3"),ordered = TRUE)
ggplot(final, aes(x=variable, y=value,col=variable))+   geom_point(position=position_jitter(width=0.15, height=0.0,seed=1),size=3,alpha=1)+
geom_boxplot(lwd=0.4,fatten=2,alpha=0.2,outlier.shape=NA)+theme_classic(base_size = 30) + theme(axis.text.x = element_text(angle = 45, hjust=1,size=15),axis.text.y = element_text(size=15)) + scale_color_manual( values=c("DU145"="#A6CEE3","LNCAP"="#1F78B4","PC3"="#B2DF8A","DUCAP"="#33A02C","VCAP"="#FB9A99"))
###Wilcoxon
LNCAP = final[which(final$variable=="LNCAP"),]
DU145 = final[which(final$variable=="DUCAP"),]
PC3 = final[which(final$variable=="PC3"),]
DUCAP = final[which(final$variable=="DU145"),]
VCAP = final[which(final$variable=="VCAP"),]
wilcox.test(LNCAP$value,DUCAP$value)
wilcox.test(LNCAP$value,VCAP$value)
wilcox.test(LNCAP$value,DU145$value)
wilcox.test(LNCAP$value,PC3$value)
setwd("D:\\PrecOnco_codes_figurewise\\Supplementary\\S3\\FigS3a")
##Loading libraries
library(keras)
library(impute)
library(tidyverse)
library(reshape2)
library(ggridges)
library(ggplot2)
##source function
source("DrugsPred.R")
##loading data
load("enrichment.scores.Rdata")
##Aveeraging GSVA scores of biological replicates
enrichment.scores =t(apply(enrichment.scores, 1, function(x) tapply(x, colnames(enrichment.scores), mean)))
##loading metadata file
load("GDSC2_metadata.RData")
##Drug response prediction
df1 = drugPred(enrichment.scores,metadata,"PRAD")
##Reduce list to dataframe
Pred=df1 %>% purrr::reduce(left_join, by = "DRUGS")
rownames(Pred) = Pred[,1]
predictions = Pred[,-1]
sdmean = read.csv("Drugs_means_sd.csv",sep=",",header = T,stringsAsFactors = F,row.names = 1)
pred = merge(sdmean,predictions,by=0)
Predictions = (pred[,5:ncol(pred)] - pred[,3])/pred[,4]
Pred = cbind.data.frame(pred[,1],Predictions)
colnames(Pred)<-sub("ATT.","",colnames(Pred))
##Ridgeplot
df = reshape2::melt(Pred)
df$variable <- factor(df$variable, levels = c("DHT", "APA.DHT", "BIC.DHT","ENZ.DHT","VEH","APA.VEH","BIC.VEH","ENZ.VEH"))
df %>%
ggplot( aes(y=variable, x=value,  fill=variable)) +
geom_density_ridges_gradient() +
theme_classic(base_size = 25) + scale_fill_manual( values=c("DHT"="#99000D","BIC.DHT"="#FB6A4A","ENZ.DHT"="#FC9272","APA.DHT"="#EF3B2C","VEH"="#084594","BIC.VEH"="#4292C6","ENZ.VEH"="#9ECAE1","APA.VEH"="#2171B5"))
setwd("D:\\PrecOnco_codes_figurewise\\Supplementary\\S3\\FigS3b")
##Loading libraries
library(keras)
library(impute)
library(tidyverse)
library(reshape2)
##source function
source("DrugsPred.R")
##loading data
load("enrichment.scores.Rdata")
##Aveeraging GSVA scores of biological replicates
enrichment.scores =t(apply(enrichment.scores, 1, function(x) tapply(x, colnames(enrichment.scores), mean)))
##loading metadata file
load("GDSC2_metadata.RData")
##Drug response prediction
df1 = drugPred(enrichment.scores,metadata,"PRAD")
##Reduce list to dataframe
Pred=df1 %>%  purrr::reduce(left_join, by = "DRUGS")
Predictions = Pred[,2:ncol(Pred)]
rownames(Predictions) = Pred[,1]
sdmean = read.csv("Drugs_means_sd.csv",sep=",",header = T,stringsAsFactors = F,row.names = 1)
pred = merge(sdmean,Predictions,by=0)
Predictions = (pred[,5:ncol(pred)] - pred[,3])/pred[,4]
Pred = cbind.data.frame(pred[,1],Predictions)
colnames(Pred)[1] = "DRUGS"
###Subsetting PI3K/MTOR signaling drugs
pathways = read.csv("GDSC2_targeted_pathways.csv",sep=",",header = T,stringsAsFactors = F)
pos = which((pathways[,1]) %in% Pred[,1])
pathways=pathways[pos,]
pos = which(pathways$Pathways =="PI3K/MTOR signaling")
pathways = pathways[pos,]
dr = as.vector(pathways[,1])
pos = which(Pred[,1] %in% dr)
mat = Pred[pos,]
##data preparation
final = melt(mat)
final$variable<-gsub('ATT.','',final$variable)
final$col <- ifelse(final$DRUGS %in% c("Afuresertib","Uprosertib"), "darkred", "ivory4")
final$shape <- ifelse(final$DRUGS == "Afuresertib",17,19)
final <- within(final, shape[DRUGS == 'Uprosertib' & shape == 19] <- 15)
shape = as.numeric(final$shape)
names(shape) = final$DRUGS
final$variable <- factor(final$variable, levels = c("VEH", "APA.VEH","BIC.VEH","ENZ.VEH", "DHT","APA.DHT","BIC.DHT","ENZ.DHT"))
##Ploting
ggplot(final, aes(x=variable, y=value))+
geom_boxplot(lwd=0.3,fatten=4,alpha=0.2,outlier.shape=NA)+
geom_point(aes(color=col,shape= DRUGS), position=position_jitter(width=0.15, height=0.0,seed=1),size=1,alpha=0.8,stroke=1)+ scale_shape_manual(values =shape)+
scale_colour_identity()+
theme_classic(base_size = 20) + theme(axis.text.x = element_text(angle = 45, hjust=1,size=10),axis.text.y = element_text(size=10))
###Wilcoxon test
DHT = final[which(final$variable=="DHT"),]
APA.DHT =final[which(final$variable=="APA.DHT"),]
BIC.DHT =final[which(final$variable=="BIC.DHT"),]
ENZ.DHT =final[which(final$variable=="ENZ.DHT"),]
VEH = final[which(final$variable=="VEH"),]
APA.VEH =final[which(final$variable=="APA.VEH"),]
BIC.VEH =final[which(final$variable=="BIC.VEH"),]
ENZ.VEH =final[which(final$variable=="ENZ.VEH"),]
wilcox.test(DHT$value,VEH$value)
wilcox.test(APA.DHT$value,APA.VEH$value)
wilcox.test(BIC.DHT$value,BIC.VEH$value)
wilcox.test(ENZ.DHT$value,ENZ.VEH$value)
wilcox.test(DHT$value,VEH$value)
wilcox.test(APA.DHT$value,APA.VEH$value)
wilcox.test(BIC.DHT$value,BIC.VEH$value)
wilcox.test(ENZ.DHT$value,ENZ.VEH$value)
setwd("D:\\PrecOnco_codes_figurewise\\Supplementary\\S3\\FigS3c")
##Loading libraries
library(keras)
library(impute)
library(tidyverse)
library(reshape2)
library(ggridges)
library(ggplot2)
##source function
source("DrugsPred.R")
##loading data
load("enrichment.scores.Rdata")
##Aveeraging GSVA scores of biological replicates
enrichment.scores =t(apply(enrichment.scores, 1, function(x) tapply(x, colnames(enrichment.scores), mean)))
##loading metadata file
load("GDSC2_metadata.RData")
##Drug response prediction
df1 = drugPred(enrichment.scores,metadata,"PRAD")
Pred=df1 %>% purrr::reduce(left_join, by = "DRUGS")
rownames(Pred) = Pred[,1]
predictions = Pred[,-1]
sdmean = read.csv("Drugs_means_sd.csv",sep=",",header = T,stringsAsFactors = F,row.names = 1)
pred = merge(sdmean,predictions,by=0)
Predictions = (pred[,5:ncol(pred)] - pred[,3])/pred[,4]
Pred = cbind.data.frame(pred[,1],Predictions)
###Subsetting Mitosis related drugs
pathways = read.csv("GDSC2_targeted_pathways.csv",sep=",",header = T,stringsAsFactors = F)
pos = which((pathways[,1]) %in% Pred[,1])
pathways=pathways[pos,]
pos = which(pathways$Pathways =="Mitosis")
pathways = pathways[pos,]
dr = as.vector(pathways[,1])
pos = which(Pred[,1] %in% dr)
mat = Pred[pos,]
##data preparation
final = melt(mat)
colnames(final)[1]  = "DRUGS"
final$variable<-gsub('ATT.','',final$variable)
final$col <- ifelse(final$DRUGS %in% c("Docetaxel","Paclitaxel"), "darkred", "ivory4")
final$shape <- ifelse(final$DRUGS == "Docetaxel",17,19)
final <- within(final, shape[DRUGS == 'Paclitaxel' & shape == 19] <- 15)
shape = as.numeric(final$shape)
names(shape) = final$DRUGS
final$variable <- factor(final$variable,
levels = c('VEH','APA.VEH','BIC.VEH','ENZ.VEH','DHT','APA.DHT','BIC.DHT','ENZ.DHT'),ordered = TRUE)
##Ploting
ggplot(final, aes(x=variable, y=value))+
geom_boxplot(lwd=0.3,fatten=4,alpha=0.2,outlier.shape=NA)+
geom_point(aes(color=col,shape= DRUGS), position=position_jitter(width=0.15, height=0.0,seed=1),size=1,alpha=0.8,stroke=1)+ scale_shape_manual(values =shape)+
scale_colour_identity()+
theme_classic(base_size = 20) + theme(axis.text.x = element_text(angle = 45, hjust=1,size=10),axis.text.y = element_text(size=10))+ylab("Prdicted LN IC50 (Z-Score) Mitosis")
###Wilcoxon test
DHT = final[which(final$variable=="DHT"),]
APA.DHT =final[which(final$variable=="APA.DHT"),]
BIC.DHT =final[which(final$variable=="BIC.DHT"),]
ENZ.DHT =final[which(final$variable=="ENZ.DHT"),]
VEH = final[which(final$variable=="VEH"),]
APA.VEH =final[which(final$variable=="APA.VEH"),]
BIC.VEH =final[which(final$variable=="BIC.VEH"),]
ENZ.VEH =final[which(final$variable=="ENZ.VEH"),]
wilcox.test(DHT$value,VEH$value)
wilcox.test(APA.DHT$value,APA.VEH$value)
wilcox.test(BIC.DHT$value,BIC.VEH$value)
wilcox.test(ENZ.DHT$value,ENZ.VEH$value)
wilcox.test(DHT$value,VEH$value)
wilcox.test(APA.DHT$value,APA.VEH$value)
wilcox.test(BIC.DHT$value,BIC.VEH$value)
wilcox.test(ENZ.DHT$value,ENZ.VEH$value)
setwd("D:\\PrecOnco_codes_figurewise\\Supplementary\\S4\\figS4a")
##loading libraries
library(pheatmap)
##loading predictions
predictions = read.csv("ATTX_predictions.csv",sep=",",header = T,stringsAsFactors = F,row.names = 1,check.names = F)
sdmean = read.csv("Drugs_means_sd.csv",sep=",",header = T,stringsAsFactors = F,row.names = 1)
pred = merge(sdmean,predictions,by=0)
Predictions = (pred[,5:ncol(pred)] - pred[,3])/pred[,4]
rownames(Predictions) = pred[,1]
predictions = Predictions
##loading metadata
metadata = read.csv("Metadata.csv",sep=",",header = T,stringsAsFactors = F,row.names = 1)
colnames(predictions) = rownames(metadata)
meta = metadata[colnames(predictions),]
####Plotting heatmap
pathways = read.csv("GDSC2_targeted_pathways.csv",sep=",",header = T,stringsAsFactors = F)
pos = which(pathways$X %in% rownames(predictions))
pathways = unique(pathways[pos,c(1,3)])
rownames(pathways) = pathways[,1]
ann_row1 = merge(pathways,predictions,by=0)
ann_row1= ann_row1[order(ann_row1$Pathways), , drop = FALSE]
mat = ann_row1[,4:ncol(ann_row1)]
rownames(mat) = ann_row1[,1]
ann_row = as.data.frame(ann_row1[,c(3)])
rownames(ann_row) = ann_row1[,1]
colnames(ann_row) = "Pathways"
ann_row$Pathways = as.factor(ann_row$Pathways)
ann_row$Pathways <- ifelse(ann_row$Pathways=="EGFR signaling", "EGFR signaling", NA)
ann_colors = list(
Clusters = c(Cluster1="mediumorchid1",Cluster2="deeppink",Cluster3="royalblue1"),
Samples = c(CRPC="#E41A1C",ENZR="#377EB8",ENZS="#4DAF4A","PRE-CX"="#984EA3","POST-CX"="#FF7F00"),
Pathways=c("EGFR signaling" = "#FBCED0")
)
colnames(mat) = sub("ATTX.","",colnames(mat))
rownames(meta) = sub("ATTX.","",rownames(meta))
meta1 = meta[colnames(mat),]
pos1 = which(meta1$Samples=="PRE-CX")
pos2 = which(meta1$Samples=="POST-CX")
pos3 = which(meta1$Samples=="CRPC")
pos4 = which(meta1$Samples=="ENZS")
pos5 = which(meta1$Samples=="ENZR")
df = mat[,c(pos1,pos2,pos3,pos4,pos5)]
meta1 = meta[colnames(mat),]
pheatmap(df,fontsize_col = 6,col= rev(hcl.colors(20, "Spectral")),angle_col = 45,fontsize_row = 10,cluster_cols = F,annotation_colors = ann_colors,annotation_row = ann_row,cluster_rows=F,annotation_col = meta1,annotation_names_row = F,clustering_distance_rows = "euclidean",
clustering_distance_cols = "euclidean" ,show_rownames = F,fontsize = 8,cellheight = 1.5,cellwidth = 8)
setwd("D:\\PrecOnco_codes_figurewise\\Supplementary\\S4\\FigS4b")
##loading libraries
library(ggplot2)
##loading predictions
##loading predictions
predictions = read.csv("ATTX_predictions.csv",sep=",",header = T,stringsAsFactors = F,row.names = 1,check.names = F)
##loading metadata
metadata = read.csv("Metadata.csv",sep=",",header = T,stringsAsFactors = F)
colnames(metadata)[1] = "variable"
##Converting IC50 to z-scores
sdmean = read.csv("Drugs_means_sd.csv",sep=",",header = T,stringsAsFactors = F,row.names = 1)
pred = merge(sdmean,predictions,by=0)
Predictions = (pred[,5:ncol(pred)] - pred[,3])/pred[,4]
rownames(Predictions) = pred[,1]
pos = which(rownames(Predictions) %in% "Sapitinib")
Predictions = Predictions[pos,]
pred = reshape2::melt(Predictions)
##Preparing data
df = merge(pred,metadata,by="variable")
df$Samples <- factor(df$Samples, levels = c("PRE-CX", "POST-CX","CRPC","ENZS" ,"ENZR"))
ggplot(df, aes(x=Samples, y=value,col=Samples)) +
geom_boxplot(outlier.shape = NA)+scale_color_manual( values=c(CRPC="#E41A1C",ENZR="#377EB8",ENZS="#4DAF4A","PRE-CX"="#984EA3","POST-CX"="#FF7F00"))+theme_classic(base_size = 20)+theme(axis.text.x = element_text(angle = 45, hjust=1))+ylab("Predicted  LN IC50 (Z-score)")
##Wilcoxon test
PRECX  = df[which(df$Samples=="PRE-CX"),]
POSTCX  = df[which(df$Samples=="POST-CX"),]
CRPC  = df[which(df$Samples=="CRPC"),]
ENZS  = df[which(df$Samples=="ENZS"),]
ENZR  = df[which(df$Samples=="ENZR"),]
wilcox.test(PRECX$value,POSTCX$value)
wilcox.test(PRECX$value,CRPC$value)
wilcox.test(PRECX$value,ENZS$value)
wilcox.test(PRECX$value,ENZR$value)
wilcox.test(ENZS$value,ENZR$value)
wilcox.test(PRECX$value,POSTCX$value)
wilcox.test(PRECX$value,CRPC$value)
wilcox.test(PRECX$value,ENZS$value)
wilcox.test(PRECX$value,ENZR$value)
wilcox.test(ENZS$value,ENZR$value)
setwd("D:\\PrecOnco_codes_figurewise\\Supplementary\\S5\\FigS5a-b")
##loading libraries
library(pheatmap)
##Group 1
group1 = read.csv("Group1.csv",sep=",",header=T,stringsAsFactors = F)
group1 = na.omit(group1)
g1=xtabs(Freq ~ Stage + Cancer, group1)
cols = colorRampPalette(c("white", "grey","red"))(100)
pheatmap(g1, display_numbers = T,cluster_rows = F,cluster_cols = F,color = cols,number_format= "%1.0f",border_color = "black")
##Group 2
group2 = read.csv("Group2.csv",sep=",",header=T,stringsAsFactors = F)
group2 = na.omit(group2)
g2=xtabs(Freq ~ Stage + Cancer, group2)
pheatmap(g2, display_numbers = T,cluster_rows = F,cluster_cols = F,color = cols,number_format= "%1.0f",border_color = "black")
pheatmap(g1, display_numbers = T,cluster_rows = F,cluster_cols = F,color = cols,number_format= "%1.0f",border_color = "black")
setwd("D:\\PrecOnco_codes_figurewise\\Supplementary\\S5\\FigS5c-d")
#######loading data for group1
g1 = read.csv("File_for_Group1.csv",row.names = 1)
g1 = g1[,c(3,12)]
colnames(g1) = c("Prediction", "Actual")
table_g1 <- table(g1)
#######loading data for group2
g2 = read.csv("File_for_Group2.csv",row.names = 1)
g2 = g2[,c(3,12)]
colnames(g2) = c("Prediction", "Actual")
table_g2 <- table(g2)
table_g1
table_g2
